[
    {
        "label": "move _ steps",
        "type": "command",
        "category": "motion",
        "selector": "forward",
        "block_spec": "move %n steps"
    },
    {
        "label": "turn $clockwise _ degrees",
        "type": "command",
        "category": "motion",
        "selector": "turn",
        "block_spec": "turn $clockwise %n degrees"
    },
    {
        "label": "turn $counterclockwise _ degrees",
        "type": "command",
        "category": "motion",
        "selector": "turnLeft",
        "block_spec": "turn $counterclockwise %n degrees"
    },
    {
        "label": "point in direction _",
        "type": "command",
        "category": "motion",
        "selector": "setHeading",
        "block_spec": "point in direction %dir"
    },
    {
        "label": "point towards _",
        "type": "command",
        "category": "motion",
        "selector": "doFaceTowards",
        "block_spec": "point towards %dst"
    },
    {
        "label": "go to x: _ y: _",
        "type": "command",
        "category": "motion",
        "selector": "gotoXY",
        "block_spec": "go to x: %n y: %n"
    },
    {
        "label": "go to _",
        "type": "command",
        "category": "motion",
        "selector": "doGotoObject",
        "block_spec": "go to %dst"
    },
    {
        "label": "glide _ secs to x: _ y: _",
        "type": "command",
        "category": "motion",
        "selector": "doGlide",
        "block_spec": "glide %n secs to x: %n y: %n"
    },
    {
        "label": "change x by _",
        "type": "command",
        "category": "motion",
        "selector": "changeXPosition",
        "block_spec": "change x by %n"
    },
    {
        "label": "set x to _",
        "type": "command",
        "category": "motion",
        "selector": "setXPosition",
        "block_spec": "set x to %n"
    },
    {
        "label": "change y by _",
        "type": "command",
        "category": "motion",
        "selector": "changeYPosition",
        "block_spec": "change y by %n"
    },
    {
        "label": "set y to _",
        "type": "command",
        "category": "motion",
        "selector": "setYPosition",
        "block_spec": "set y to %n"
    },
    {
        "label": "if on edge, bounce",
        "type": "command",
        "category": "motion",
        "selector": "bounceOffEdge",
        "block_spec": "if on edge, bounce"
    },
    {
        "label": "position",
        "type": "reporter",
        "category": "motion",
        "selector": "getPosition",
        "block_spec": "position"
    },
    {
        "label": "x position",
        "type": "reporter",
        "category": "motion",
        "selector": "xPosition",
        "block_spec": "x position"
    },
    {
        "label": "y position",
        "type": "reporter",
        "category": "motion",
        "selector": "yPosition",
        "block_spec": "y position"
    },
    {
        "label": "direction",
        "type": "reporter",
        "category": "motion",
        "selector": "direction",
        "block_spec": "direction"
    },
    {
        "label": "switch to costume _",
        "type": "command",
        "category": "looks",
        "selector": "doSwitchToCostume",
        "block_spec": "switch to costume %cst"
    },
    {
        "label": "next costume",
        "type": "command",
        "category": "looks",
        "selector": "doWearNextCostume",
        "block_spec": "next costume"
    },
    {
        "label": "costume #",
        "type": "reporter",
        "category": "looks",
        "selector": "getCostumeIdx",
        "block_spec": "costume #"
    },
    {
        "label": "say _ for _ secs",
        "type": "command",
        "category": "looks",
        "selector": "doSayFor",
        "block_spec": "say %s for %n secs"
    },
    {
        "label": "say _",
        "type": "command",
        "category": "looks",
        "selector": "bubble",
        "block_spec": "say %s"
    },
    {
        "label": "think _ for _ secs",
        "type": "command",
        "category": "looks",
        "selector": "doThinkFor",
        "block_spec": "think %s for %n secs"
    },
    {
        "label": "think _",
        "type": "command",
        "category": "looks",
        "selector": "doThink",
        "block_spec": "think %s"
    },
    {
        "label": "_ of costume _",
        "type": "reporter",
        "category": "looks",
        "selector": "reportGetImageAttribute",
        "block_spec": "%img of costume %cst"
    },
    {
        "label": "stretch _ x: _ y: _ %",
        "type": "reporter",
        "category": "looks",
        "selector": "reportNewCostumeStretched",
        "block_spec": "stretch %cst x: %n y: %n %"
    },
    {
        "label": "skew _ to _ degrees _ %",
        "type": "reporter",
        "category": "looks",
        "selector": "reportNewCostumeSkewed",
        "block_spec": "skew %cst to %dir degrees %n %"
    },
    {
        "label": "new costume _ width _ height _",
        "type": "reporter",
        "category": "looks",
        "selector": "reportNewCostume",
        "block_spec": "new costume %l width %dim height %dim"
    },
    {
        "label": "change _ effect by _",
        "type": "command",
        "category": "looks",
        "selector": "changeEffect",
        "block_spec": "change %eff effect by %n"
    },
    {
        "label": "set _ effect to _",
        "type": "command",
        "category": "looks",
        "selector": "setEffect",
        "block_spec": "set %eff effect to %n"
    },
    {
        "label": "clear graphic effects",
        "type": "command",
        "category": "looks",
        "selector": "clearEffects",
        "block_spec": "clear graphic effects"
    },
    {
        "label": "_ effect",
        "type": "reporter",
        "category": "looks",
        "selector": "getEffect",
        "block_spec": "%eff effect"
    },
    {
        "label": "change size by _",
        "type": "command",
        "category": "looks",
        "selector": "changeScale",
        "block_spec": "change size by %n"
    },
    {
        "label": "set size to _ %",
        "type": "command",
        "category": "looks",
        "selector": "setScale",
        "block_spec": "set size to %n %"
    },
    {
        "label": "size",
        "type": "reporter",
        "category": "looks",
        "selector": "getScale",
        "block_spec": "size"
    },
    {
        "label": "show",
        "type": "command",
        "category": "looks",
        "selector": "show",
        "block_spec": "show"
    },
    {
        "label": "hide",
        "type": "command",
        "category": "looks",
        "selector": "hide",
        "block_spec": "hide"
    },
    {
        "label": "shown?",
        "type": "predicate",
        "category": "looks",
        "selector": "reportShown",
        "block_spec": "shown?"
    },
    {
        "label": "go to _ layer",
        "type": "command",
        "category": "looks",
        "selector": "goToLayer",
        "block_spec": "go to %layer layer"
    },
    {
        "label": "go back _ layers",
        "type": "command",
        "category": "looks",
        "selector": "goBack",
        "block_spec": "go back %n layers"
    },
    {
        "label": "play sound _",
        "type": "command",
        "category": "sound",
        "selector": "playSound",
        "block_spec": "play sound %snd"
    },
    {
        "label": "play sound _ until done",
        "type": "command",
        "category": "sound",
        "selector": "doPlaySoundUntilDone",
        "block_spec": "play sound %snd until done"
    },
    {
        "label": "stop all sounds",
        "type": "command",
        "category": "sound",
        "selector": "doStopAllSounds",
        "block_spec": "stop all sounds"
    },
    {
        "label": "play sound _ at _ Hz",
        "type": "command",
        "category": "sound",
        "selector": "doPlaySoundAtRate",
        "block_spec": "play sound %snd at %rate Hz"
    },
    {
        "label": "_ of sound _",
        "type": "reporter",
        "category": "sound",
        "selector": "reportGetSoundAttribute",
        "block_spec": "%aa of sound %snd"
    },
    {
        "label": "new sound _ rate _ Hz",
        "type": "reporter",
        "category": "sound",
        "selector": "reportNewSoundFromSamples",
        "block_spec": "new sound %l rate %rate Hz"
    },
    {
        "label": "rest for _ beats",
        "type": "command",
        "category": "sound",
        "selector": "doRest",
        "block_spec": "rest for %n beats"
    },
    {
        "label": "play note _ for _ beats",
        "type": "command",
        "category": "sound",
        "selector": "doPlayNote",
        "block_spec": "play note %note for %n beats"
    },
    {
        "label": "set instrument to _",
        "type": "command",
        "category": "sound",
        "selector": "doSetInstrument",
        "block_spec": "set instrument to %inst"
    },
    {
        "label": "change tempo by _",
        "type": "command",
        "category": "sound",
        "selector": "doChangeTempo",
        "block_spec": "change tempo by %n"
    },
    {
        "label": "set tempo to _ bpm",
        "type": "command",
        "category": "sound",
        "selector": "doSetTempo",
        "block_spec": "set tempo to %n bpm"
    },
    {
        "label": "tempo",
        "type": "reporter",
        "category": "sound",
        "selector": "getTempo",
        "block_spec": "tempo"
    },
    {
        "label": "change volume by _",
        "type": "command",
        "category": "sound",
        "selector": "changeVolume",
        "block_spec": "change volume by %n"
    },
    {
        "label": "set volume to _ %",
        "type": "command",
        "category": "sound",
        "selector": "setVolume",
        "block_spec": "set volume to %n %"
    },
    {
        "label": "volume",
        "type": "reporter",
        "category": "sound",
        "selector": "getVolume",
        "block_spec": "volume"
    },
    {
        "label": "change balance by _",
        "type": "command",
        "category": "sound",
        "selector": "changePan",
        "block_spec": "change balance by %n"
    },
    {
        "label": "set balance to _",
        "type": "command",
        "category": "sound",
        "selector": "setPan",
        "block_spec": "set balance to %n"
    },
    {
        "label": "balance",
        "type": "reporter",
        "category": "sound",
        "selector": "getPan",
        "block_spec": "balance"
    },
    {
        "label": "play frequency _ Hz",
        "type": "command",
        "category": "sound",
        "selector": "playFreq",
        "block_spec": "play frequency %n Hz"
    },
    {
        "label": "stop frequency",
        "type": "command",
        "category": "sound",
        "selector": "stopFreq",
        "block_spec": "stop frequency"
    },
    {
        "label": "clear",
        "type": "command",
        "category": "pen",
        "selector": "clear",
        "block_spec": "clear"
    },
    {
        "label": "pen down",
        "type": "command",
        "category": "pen",
        "selector": "down",
        "block_spec": "pen down"
    },
    {
        "label": "pen up",
        "type": "command",
        "category": "pen",
        "selector": "up",
        "block_spec": "pen up"
    },
    {
        "label": "pen down?",
        "type": "predicate",
        "category": "pen",
        "selector": "getPenDown",
        "block_spec": "pen down?"
    },
    {
        "label": "set pen color to _",
        "type": "command",
        "category": "pen",
        "selector": "setColor",
        "block_spec": "set pen color to %clr"
    },
    {
        "label": "change pen _ by _",
        "type": "command",
        "category": "pen",
        "selector": "changePenColorDimension",
        "block_spec": "change pen %clrdim by %n"
    },
    {
        "label": "set pen _ to _",
        "type": "command",
        "category": "pen",
        "selector": "setPenColorDimension",
        "block_spec": "set pen %clrdim to %n"
    },
    {
        "label": "pen _",
        "type": "reporter",
        "category": "pen",
        "selector": "getPenAttribute",
        "block_spec": "pen %pen"
    },
    {
        "label": "change pen size by _",
        "type": "command",
        "category": "pen",
        "selector": "changeSize",
        "block_spec": "change pen size by %n"
    },
    {
        "label": "set pen size to _",
        "type": "command",
        "category": "pen",
        "selector": "setSize",
        "block_spec": "set pen size to %n"
    },
    {
        "label": "stamp",
        "type": "command",
        "category": "pen",
        "selector": "doStamp",
        "block_spec": "stamp"
    },
    {
        "label": "fill",
        "type": "command",
        "category": "pen",
        "selector": "floodFill",
        "block_spec": "fill"
    },
    {
        "label": "write _ size _",
        "type": "command",
        "category": "pen",
        "selector": "write",
        "block_spec": "write %s size %n"
    },
    {
        "label": "pen trails",
        "type": "reporter",
        "category": "pen",
        "selector": "reportPenTrailsAsCostume",
        "block_spec": "pen trails"
    },
    {
        "label": "paste on _",
        "type": "command",
        "category": "pen",
        "selector": "doPasteOn",
        "block_spec": "paste on %spr"
    },
    {
        "label": "cut from _",
        "type": "command",
        "category": "pen",
        "selector": "doCutFrom",
        "block_spec": "cut from %spr"
    },
    {
        "label": "broadcast _ _",
        "type": "command",
        "category": "control",
        "selector": "doBroadcast",
        "block_spec": "broadcast %msg %receive"
    },
    {
        "label": "broadcast _ _ and wait",
        "type": "command",
        "category": "control",
        "selector": "doBroadcastAndWait",
        "block_spec": "broadcast %msg %receive and wait"
    },
    {
        "label": "warp _",
        "type": "command",
        "category": "other",
        "selector": "doWarp",
        "block_spec": "warp %c"
    },
    {
        "label": "wait _ secs",
        "type": "command",
        "category": "control",
        "selector": "doWait",
        "block_spec": "wait %n secs"
    },
    {
        "label": "wait until _",
        "type": "command",
        "category": "control",
        "selector": "doWaitUntil",
        "block_spec": "wait until %boolUE"
    },
    {
        "label": "forever _",
        "type": "command",
        "category": "control",
        "selector": "doForever",
        "block_spec": "forever %loop"
    },
    {
        "label": "repeat _ _",
        "type": "command",
        "category": "control",
        "selector": "doRepeat",
        "block_spec": "repeat %n %loop"
    },
    {
        "label": "repeat until _ _",
        "type": "command",
        "category": "control",
        "selector": "doUntil",
        "block_spec": "repeat until %boolUE %loop"
    },
    {
        "label": "for _ = _ to _ _",
        "type": "command",
        "category": "control",
        "selector": "doFor",
        "block_spec": "for %upvar = %n to %n %cla"
    },
    {
        "label": "if _ _ _",
        "type": "command",
        "category": "control",
        "selector": "doIf",
        "block_spec": "if %b %c %elseif"
    },
    {
        "label": "if _ _ else _",
        "type": "command",
        "category": "control",
        "selector": "doIfElse",
        "block_spec": "if %b %c else %c"
    },
    {
        "label": "if _ then _ else _",
        "type": "reporter",
        "category": "control",
        "selector": "reportIfElse",
        "block_spec": "if %b then %anyUE else %anyUE"
    },
    {
        "label": "report _",
        "type": "command",
        "category": "control",
        "selector": "doReport",
        "block_spec": "report %s"
    },
    {
        "label": "stop _",
        "type": "command",
        "category": "control",
        "selector": "doStopThis",
        "block_spec": "stop %stopChoices"
    },
    {
        "label": "run _ _",
        "type": "command",
        "category": "control",
        "selector": "doRun",
        "block_spec": "run %cmdRing %inputs"
    },
    {
        "label": "launch _ _",
        "type": "command",
        "category": "control",
        "selector": "fork",
        "block_spec": "launch %cmdRing %inputs"
    },
    {
        "label": "call _ _",
        "type": "reporter",
        "category": "control",
        "selector": "evaluate",
        "block_spec": "call %repRing %inputs"
    },
    {
        "label": "pipe _ $arrowRight _",
        "type": "reporter",
        "category": "control",
        "selector": "reportPipe",
        "block_spec": "pipe %s $arrowRight %mult%repRing"
    },
    {
        "label": "tell _ to _ _",
        "type": "command",
        "category": "control",
        "selector": "doTellTo",
        "block_spec": "tell %spr to %cmdRing %inputs"
    },
    {
        "label": "ask _ for _ _",
        "type": "reporter",
        "category": "control",
        "selector": "reportAskFor",
        "block_spec": "ask %spr for %repRing %inputs"
    },
    {
        "label": "create a clone of _",
        "type": "command",
        "category": "control",
        "selector": "createClone",
        "block_spec": "create a clone of %cln"
    },
    {
        "label": "a new clone of _",
        "type": "reporter",
        "category": "control",
        "selector": "newClone",
        "block_spec": "a new clone of %clntrtl"
    },
    {
        "label": "delete this clone",
        "type": "command",
        "category": "control",
        "selector": "removeClone",
        "block_spec": "delete this clone"
    },
    {
        "label": "pause all $pause",
        "type": "command",
        "category": "control",
        "selector": "doPauseAll",
        "block_spec": "pause all $pause"
    },
    {
        "label": "switch to scene _ _",
        "type": "command",
        "category": "control",
        "selector": "doSwitchToScene",
        "block_spec": "switch to scene %scn %send"
    },
    {
        "label": "define _ _ _",
        "type": "command",
        "category": "control",
        "selector": "doDefineBlock",
        "block_spec": "define %upvar %s %repRing"
    },
    {
        "label": "delete block _",
        "type": "command",
        "category": "control",
        "selector": "doDeleteBlock",
        "block_spec": "delete block %repRing"
    },
    {
        "label": "set _ of block _ to _",
        "type": "command",
        "category": "control",
        "selector": "doSetBlockAttribute",
        "block_spec": "set %byob of block %repRing to %s"
    },
    {
        "label": "_ of block _",
        "type": "reporter",
        "category": "control",
        "selector": "reportBlockAttribute",
        "block_spec": "%block of block %repRing"
    },
    {
        "label": "this _",
        "type": "reporter",
        "category": "control",
        "selector": "reportEnvironment",
        "block_spec": "this %env"
    },
    {
        "label": "set slot _ to _",
        "type": "command",
        "category": "control",
        "selector": "doSetSlot",
        "block_spec": "set slot %inputSlot to %s"
    },
    {
        "label": "touching _ ?",
        "type": "predicate",
        "category": "sensing",
        "selector": "reportTouchingObject",
        "block_spec": "touching %col ?"
    },
    {
        "label": "touching _ ?",
        "type": "predicate",
        "category": "sensing",
        "selector": "reportTouchingColor",
        "block_spec": "touching %clr ?"
    },
    {
        "label": "color _ is touching _ ?",
        "type": "predicate",
        "category": "sensing",
        "selector": "reportColorIsTouchingColor",
        "block_spec": "color %clr is touching %clr ?"
    },
    {
        "label": "ask _ and wait",
        "type": "command",
        "category": "sensing",
        "selector": "doAsk",
        "block_spec": "ask %s and wait"
    },
    {
        "label": "answer",
        "type": "reporter",
        "category": "sensing",
        "selector": "getLastAnswer",
        "block_spec": "answer"
    },
    {
        "label": "mouse position",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportMousePosition",
        "block_spec": "mouse position"
    },
    {
        "label": "mouse x",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportMouseX",
        "block_spec": "mouse x"
    },
    {
        "label": "mouse y",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportMouseY",
        "block_spec": "mouse y"
    },
    {
        "label": "mouse down?",
        "type": "predicate",
        "category": "sensing",
        "selector": "reportMouseDown",
        "block_spec": "mouse down?"
    },
    {
        "label": "key _ pressed?",
        "type": "predicate",
        "category": "sensing",
        "selector": "reportKeyPressed",
        "block_spec": "key %key pressed?"
    },
    {
        "label": "_ to _",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportRelationTo",
        "block_spec": "%rel to %dst"
    },
    {
        "label": "_ at _",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportAspect",
        "block_spec": "%asp at %loc"
    },
    {
        "label": "reset timer",
        "type": "command",
        "category": "sensing",
        "selector": "doResetTimer",
        "block_spec": "reset timer"
    },
    {
        "label": "timer",
        "type": "reporter",
        "category": "sensing",
        "selector": "getTimer",
        "block_spec": "timer"
    },
    {
        "label": "current _",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportDate",
        "block_spec": "current %dates"
    },
    {
        "label": "_ of _",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportAttributeOf",
        "block_spec": "%att of %spr"
    },
    {
        "label": "my _",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportGet",
        "block_spec": "my %get"
    },
    {
        "label": "object _",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportObject",
        "block_spec": "object %self"
    },
    {
        "label": "url _",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportURL",
        "block_spec": "url %s"
    },
    {
        "label": "microphone _",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportAudio",
        "block_spec": "microphone %audio"
    },
    {
        "label": "video _ on _",
        "type": "reporter",
        "category": "sensing",
        "selector": "reportVideo",
        "block_spec": "video %vid on %self"
    },
    {
        "label": "set video transparency to _",
        "type": "command",
        "category": "sensing",
        "selector": "doSetVideoTransparency",
        "block_spec": "set video transparency to %n"
    },
    {
        "label": "is _ on?",
        "type": "predicate",
        "category": "sensing",
        "selector": "reportGlobalFlag",
        "block_spec": "is %setting on?"
    },
    {
        "label": "set _ to _",
        "type": "command",
        "category": "sensing",
        "selector": "doSetGlobalFlag",
        "block_spec": "set %setting to %b"
    },
    {
        "label": "_ _",
        "type": "command",
        "category": "other",
        "selector": "reifyScript",
        "block_spec": "%rc %ringparms"
    },
    {
        "label": "_ _",
        "type": "reporter",
        "category": "other",
        "selector": "reifyReporter",
        "block_spec": "%rr %ringparms"
    },
    {
        "label": "_ _",
        "type": "predicate",
        "category": "other",
        "selector": "reifyPredicate",
        "block_spec": "%rp %ringparms"
    },
    {
        "label": "_",
        "type": "reporter",
        "category": "operators",
        "selector": "reportVariadicSum",
        "block_spec": "%sum"
    },
    {
        "label": "_ − _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportDifference",
        "block_spec": "%n − %n"
    },
    {
        "label": "_",
        "type": "reporter",
        "category": "operators",
        "selector": "reportVariadicProduct",
        "block_spec": "%product"
    },
    {
        "label": "_ / _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportQuotient",
        "block_spec": "%n / %n"
    },
    {
        "label": "_ ^ _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportPower",
        "block_spec": "%n ^ %n"
    },
    {
        "label": "_ mod _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportModulus",
        "block_spec": "%n mod %n"
    },
    {
        "label": "_",
        "type": "reporter",
        "category": "operators",
        "selector": "reportVariadicMin",
        "block_spec": "%min"
    },
    {
        "label": "_",
        "type": "reporter",
        "category": "operators",
        "selector": "reportVariadicMax",
        "block_spec": "%max"
    },
    {
        "label": "round _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportRound",
        "block_spec": "round %n"
    },
    {
        "label": "_ of _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportMonadic",
        "block_spec": "%fun of %n"
    },
    {
        "label": "atan2 _ ÷ _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportAtan2",
        "block_spec": "atan2 %n ÷ %n"
    },
    {
        "label": "pick random _ to _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportRandom",
        "block_spec": "pick random %ns to %ns"
    },
    {
        "label": "_",
        "type": "predicate",
        "category": "operators",
        "selector": "reportVariadicLessThan",
        "block_spec": "%all<"
    },
    {
        "label": "_",
        "type": "predicate",
        "category": "operators",
        "selector": "reportVariadicEquals",
        "block_spec": "%all="
    },
    {
        "label": "_",
        "type": "predicate",
        "category": "operators",
        "selector": "reportVariadicGreaterThan",
        "block_spec": "%all>"
    },
    {
        "label": "_",
        "type": "predicate",
        "category": "operators",
        "selector": "reportVariadicAnd",
        "block_spec": "%all"
    },
    {
        "label": "_",
        "type": "predicate",
        "category": "operators",
        "selector": "reportVariadicOr",
        "block_spec": "%any"
    },
    {
        "label": "not _",
        "type": "predicate",
        "category": "operators",
        "selector": "reportNot",
        "block_spec": "not %b"
    },
    {
        "label": "_",
        "type": "predicate",
        "category": "operators",
        "selector": "reportBoolean",
        "block_spec": "%bool"
    },
    {
        "label": "join _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportJoinWords",
        "block_spec": "join %words"
    },
    {
        "label": "split _ by _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportTextSplit",
        "block_spec": "split %s by %delim"
    },
    {
        "label": "letter _ of _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportLetter",
        "block_spec": "letter %ix of %s"
    },
    {
        "label": "_ of text _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportTextAttribute",
        "block_spec": "%ta of text %s"
    },
    {
        "label": "unicode of _",
        "type": "reporter",
        "category": "operators",
        "selector": "reportUnicode",
        "block_spec": "unicode of %s"
    },
    {
        "label": "unicode _ as letter",
        "type": "reporter",
        "category": "operators",
        "selector": "reportUnicodeAsLetter",
        "block_spec": "unicode %n as letter"
    },
    {
        "label": "is _ a _ ?",
        "type": "predicate",
        "category": "operators",
        "selector": "reportIsA",
        "block_spec": "is %s a %typ ?"
    },
    {
        "label": "is _ ?",
        "type": "predicate",
        "category": "operators",
        "selector": "reportVariadicIsIdentical",
        "block_spec": "is %all== ?"
    },
    {
        "label": "JavaScript function ( _ ) { _ }",
        "type": "reporter",
        "category": "operators",
        "selector": "reportJSFunction",
        "block_spec": "JavaScript function ( %mult%s ) { %code }"
    },
    {
        "label": "blocks json",
        "type": "reporter",
        "category": "variables",
        "selector": "reportGetVar",
        "block_spec": "blocks json"
    },
    {
        "label": "blocks list",
        "type": "reporter",
        "category": "variables",
        "selector": "reportGetVar",
        "block_spec": "blocks list"
    },
    {
        "label": "blocks table md",
        "type": "reporter",
        "category": "variables",
        "selector": "reportGetVar",
        "block_spec": "blocks table md"
    },
    {
        "label": "HEADER",
        "type": "reporter",
        "category": "variables",
        "selector": "reportGetVar",
        "block_spec": "HEADER"
    },
    {
        "label": "missing screens",
        "type": "reporter",
        "category": "variables",
        "selector": "reportGetVar",
        "block_spec": "missing screens"
    },
    {
        "label": "test-block",
        "type": "reporter",
        "category": "variables",
        "selector": "reportGetVar",
        "block_spec": "test-block"
    },
    {
        "label": "set _ to _",
        "type": "command",
        "category": "variables",
        "selector": "doSetVar",
        "block_spec": "set %var to %s"
    },
    {
        "label": "change _ by _",
        "type": "command",
        "category": "variables",
        "selector": "doChangeVar",
        "block_spec": "change %var by %n"
    },
    {
        "label": "show variable _",
        "type": "command",
        "category": "variables",
        "selector": "doShowVar",
        "block_spec": "show variable %var"
    },
    {
        "label": "hide variable _",
        "type": "command",
        "category": "variables",
        "selector": "doHideVar",
        "block_spec": "hide variable %var"
    },
    {
        "label": "script variables _",
        "type": "command",
        "category": "other",
        "selector": "doDeclareVariables",
        "block_spec": "script variables %scriptVars"
    },
    {
        "label": "inherit _",
        "type": "command",
        "category": "variables",
        "selector": "doDeleteAttr",
        "block_spec": "inherit %shd"
    },
    {
        "label": "list _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportNewList",
        "block_spec": "list %exp"
    },
    {
        "label": "numbers from _ to _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportNumbers",
        "block_spec": "numbers from %n to %n"
    },
    {
        "label": "_ in front of _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportCONS",
        "block_spec": "%s in front of %l"
    },
    {
        "label": "item _ of _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportListItem",
        "block_spec": "item %idx of %l"
    },
    {
        "label": "all but first of _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportCDR",
        "block_spec": "all but first of %l"
    },
    {
        "label": "_ of _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportListAttribute",
        "block_spec": "%la of %l"
    },
    {
        "label": "index of _ in _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportListIndex",
        "block_spec": "index of %s in %l"
    },
    {
        "label": "_ contains _",
        "type": "predicate",
        "category": "lists",
        "selector": "reportListContainsItem",
        "block_spec": "%l contains %s"
    },
    {
        "label": "is _ empty?",
        "type": "predicate",
        "category": "lists",
        "selector": "reportListIsEmpty",
        "block_spec": "is %l empty?"
    },
    {
        "label": "map _ over _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportMap",
        "block_spec": "map %repRing over %l"
    },
    {
        "label": "keep items _ from _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportKeep",
        "block_spec": "keep items %predRing from %l"
    },
    {
        "label": "find first item _ in _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportFindFirst",
        "block_spec": "find first item %predRing in %l"
    },
    {
        "label": "combine _ using _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportCombine",
        "block_spec": "combine %l using %repRing"
    },
    {
        "label": "for each _ in _ _",
        "type": "command",
        "category": "lists",
        "selector": "doForEach",
        "block_spec": "for each %upvar in %l %cla"
    },
    {
        "label": "add _ to _",
        "type": "command",
        "category": "lists",
        "selector": "doAddToList",
        "block_spec": "add %s to %l"
    },
    {
        "label": "delete _ of _",
        "type": "command",
        "category": "lists",
        "selector": "doDeleteFromList",
        "block_spec": "delete %ida of %l"
    },
    {
        "label": "insert _ at _ of _",
        "type": "command",
        "category": "lists",
        "selector": "doInsertInList",
        "block_spec": "insert %s at %idx of %l"
    },
    {
        "label": "replace item _ of _ with _",
        "type": "command",
        "category": "lists",
        "selector": "doReplaceInList",
        "block_spec": "replace item %idx of %l with %s"
    },
    {
        "label": "append _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportConcatenatedLists",
        "block_spec": "append %lists"
    },
    {
        "label": "reshape _ to _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportReshape",
        "block_spec": "reshape %s to %nums"
    },
    {
        "label": "combinations _",
        "type": "reporter",
        "category": "lists",
        "selector": "reportCrossproduct",
        "block_spec": "combinations %lists"
    },
    {
        "label": "_ primitive _",
        "type": "command",
        "category": "other",
        "selector": "doPrimitive",
        "block_spec": "%bool primitive %prim"
    },
    {
        "label": "extension _ _",
        "type": "command",
        "category": "other",
        "selector": "doApplyExtension",
        "block_spec": "extension %ext %mult%s"
    },
    {
        "label": "extension _ _",
        "type": "reporter",
        "category": "other",
        "selector": "reportApplyExtension",
        "block_spec": "extension %ext %mult%s"
    }
]
